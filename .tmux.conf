### Binding Prefix
set -g prefix C-a
bind-key C-a send-prefix                # allows to bypass prefix
set -g prefix2 C-b

### show bar on top | bottom
set-option -g status-position top

### Undercurl
# please note for wezterm you must run a command see https://wezfurlong.org/wezterm/faq.html#how-do-i-enable-undercurl-curly-underlines
# tempfile=$(mktemp) \
  && curl -o $tempfile https://raw.githubusercontent.com/wez/wezterm/master/termwiz/data/wezterm.terminfo \
  && tic -x -o ~/.terminfo $tempfile \
  && rm $tempfile
set -g default-terminal "wezterm"
# set -g default-terminal 'tmux-256color'
set -ag terminal-overrides ",xterm-256color:RGB"
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'  # undercurl support
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'  # underscore colours - needs tmux-3.0

# yazi allow passthrough
set -g allow-passthrough on
set -ga update-environment TERM
set -ga update-environment TERM_PROGRAM

### set zsh in linux if as shared remote device
if-shell 'uname | grep -q Linux' {
  set-option -g default-shell /usr/bin/zsh
  # set -as terminal-overrides ",xterm*:Tc"
}

setw -g xterm-keys on
set -s escape-time 10                     # faster command sequences
set -sg repeat-time 600                   # increase repeat timeout
set -s focus-events on

set -q -g status-utf8 on                  # expect UTF-8 (tmux < 2.2)
setw -q -g utf8 on

set -g history-limit 10000                 # boost history
# tmux messages are displayed for 3 seconds
set -g display-time 3000

# -- automatic window rename --------------------------------------------------

# set-option -g status-interval 5
set-option -g automatic-rename on
set-option -g automatic-rename-format '#{b:pane_current_path}'

setw -g mouse on        # Mouse mode

## default shell (useful for shared machines)
# set-option -g default-shell "/bin/zsh"
# set-option -g default-command "/bin/zsh"

# set easier window split keys
bind-key v split-window -h -c "#{pane_current_path}"
bind-key h split-window -v -c "#{pane_current_path}"

# easier and faster switching between next/prev window
bind -n C-p previous-window
bind -n C-n next-window

# Find session
bind-key f command-prompt -p find-session 'switch-client -t %%'

# Easy config reload
bind-key r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded."

# Use Alt-arrow keys to switch resize pane
bind -n M-Left resize-pane -L 5
bind -n M-Right resize-pane -R 5
bind -n M-Up resize-pane -U 5
bind -n M-Down resize-pane -D 5

# Moving windows
bind-key -n C-S-Left swap-window -t -1
bind-key -n C-S-h swap-window -t -1
bind-key -n C-S-Right swap-window -t +1
bind-key -n C-S-l swap-window -t +1

bind -n M-1 select-window -t :1
bind -n M-2 select-window -t :2
bind -n M-3 select-window -t :3
bind -n M-4 select-window -t :4
bind -n M-5 select-window -t :5
bind -n M-6 select-window -t :6
bind -n M-7 select-window -t :7
bind -n M-8 select-window -t :8
bind -n M-9 select-window -t :9

## copy like vim
bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'y' send -X copy-selection-and-cancel

# enter copy mode shortcut
bind-key -n C-t copy-mode
# set copy mode keybinds to vi
setw -g mode-keys vi

# -- display -------------------------------------------------------------------

set -g pane-base-index 1      # start window counter from 1
set -g base-index 1           # start windows numbering at 1
setw -g pane-base-index 1     # make pane numbering consistent with windows
set -g renumber-windows on    # renumber windows when a window is closed
set -g set-titles on          # set terminal title

set -g display-panes-time 800 # slightly longer pane indicators display time
set -g display-time 1000      # slightly longer status messages display time
set -g status-interval 10     # redraw status line every 10 seconds


## catppuccin
set -ogq @catppuccin_flavor 'mocha' # or frappe, macchiato, mocha
set -ogq @catppuccin_window_status_style "rounded"

set -g @catppuccin_window_current_text " #W"
set -g @catppuccin_window_current_number ""
# set -g @catppuccin_window_number_position "right"
set -g @catppuccin_window_current_number_color "#{@thm_mauve}"
set -g @catppuccin_window_current_text_color "#{fg=@thm_blue}"
set -g @catppuccin_window_text " #W"
set -g @catppuccin_window_number ""
set -g @catppuccin_window_number_color "#{@thm_surface_1}"
set -g @catppuccin_window_text_color "#{@thm_surface_1}"
set -g @catppuccin_window_flags "icon"
set -g @catppuccin_window_flags_icon_current ""
set -g @catppuccin_window_flags_icon_last ""
set -g @catppuccin_status_background "#{@thm_bg}"
set -g @catppuccin_status_left_separator " "
set -g @catppuccin_status_middle_separator ""
set -g @catppuccin_status_right_separator ""
set -g @catppuccin_status_connect_separator "no" # yes, no

set -g @catppuccin_date_time_text " %I:%M %p"

set -g @catppuccin_pane_status_enabled "yes" # set to "yes" to enable
set -g @catppuccin_pane_border_status "yes" # set to "yes" to enable

set -g @catppuccin_window_middle_separator "  "
set -g @catppuccin_status_right_separator_inverse "no"


set -g status 2
set -g status-format[1] ''

### tpm plugin manager

## plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'christoomey/vim-tmux-navigator'

# clone to plugins but not run through tpm
run ~/.tmux/plugins/tmux/catppuccin.tmux

set -g status-left-length 100
set -g status-right-length 100

set -g status-left ""
set -g status-right ""

# this plugin only works for mac
if-shell 'uname | grep -q Darwin' {
  # this enables notifier to show though tmux
  # requires brew install reattach-to-user-namespace
  set -g default-command "which reattach-to-user-namespace > /dev/null && reattach-to-user-namespace -l $SHELL || $SHELL -l"

  # brew catppuccin plugin
  source -F ~/.tmux/plugins/brew-tmux/brew.conf
  set -ag status-right "#{E:@catppuccin_status_brew}"
}

source -F ~/.tmux/plugins/hostname-tmux/hostname.conf
set -ag status-right "#{E:@catppuccin_status_hostname}"

set -agF status-right "#{E:@catppuccin_status_date_time}"

set -ag status-right "#{E:@catppuccin_status_session}"

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
